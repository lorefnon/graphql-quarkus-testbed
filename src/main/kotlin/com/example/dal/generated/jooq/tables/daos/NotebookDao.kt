/*
 * This file is generated by jOOQ.
 */
package com.example.dal.generated.jooq.tables.daos


import com.example.dal.generated.jooq.tables.Notebook
import com.example.dal.generated.jooq.tables.records.NotebookRecord

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class NotebookDao(configuration: Configuration?) : DAOImpl<NotebookRecord, com.example.dal.generated.jooq.tables.pojos.Notebook, Int>(Notebook.NOTEBOOK, com.example.dal.generated.jooq.tables.pojos.Notebook::class.java, configuration) {

    /**
     * Create a new NotebookDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: com.example.dal.generated.jooq.tables.pojos.Notebook): Int? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Int?, upperInclusive: Int?): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetchRange(Notebook.NOTEBOOK.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Int): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetch(Notebook.NOTEBOOK.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Int): com.example.dal.generated.jooq.tables.pojos.Notebook? = fetchOne(Notebook.NOTEBOOK.ID, value)

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTitle(lowerInclusive: String, upperInclusive: String): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetchRange(Notebook.NOTEBOOK.TITLE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    fun fetchByTitle(vararg values: String): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetch(Notebook.NOTEBOOK.TITLE, *values)

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDescription(lowerInclusive: String, upperInclusive: String): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetchRange(Notebook.NOTEBOOK.DESCRIPTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    fun fetchByDescription(vararg values: String): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetch(Notebook.NOTEBOOK.DESCRIPTION, *values)

    /**
     * Fetch records that have <code>creator_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCreatorId(lowerInclusive: Int?, upperInclusive: Int?): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetchRange(Notebook.NOTEBOOK.CREATOR_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>creator_id IN (values)</code>
     */
    fun fetchByCreatorId(vararg values: Int): List<com.example.dal.generated.jooq.tables.pojos.Notebook> = fetch(Notebook.NOTEBOOK.CREATOR_ID, *values.toTypedArray())
}

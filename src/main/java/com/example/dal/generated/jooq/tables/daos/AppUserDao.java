/*
 * This file is generated by jOOQ.
 */
package com.example.dal.generated.jooq.tables.daos;


import com.example.dal.generated.jooq.tables.AppUser;
import com.example.dal.generated.jooq.tables.records.AppUserRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUserDao extends DAOImpl<AppUserRecord, com.example.dal.generated.jooq.tables.pojos.AppUser, Integer> {

    /**
     * Create a new AppUserDao without any configuration
     */
    public AppUserDao() {
        super(AppUser.APP_USER, com.example.dal.generated.jooq.tables.pojos.AppUser.class);
    }

    /**
     * Create a new AppUserDao with an attached configuration
     */
    public AppUserDao(Configuration configuration) {
        super(AppUser.APP_USER, com.example.dal.generated.jooq.tables.pojos.AppUser.class, configuration);
    }

    @Override
    public Integer getId(com.example.dal.generated.jooq.tables.pojos.AppUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.dal.generated.jooq.tables.pojos.AppUser> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(AppUser.APP_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.dal.generated.jooq.tables.pojos.AppUser> fetchById(Integer... values) {
        return fetch(AppUser.APP_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.dal.generated.jooq.tables.pojos.AppUser fetchOneById(Integer value) {
        return fetchOne(AppUser.APP_USER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.dal.generated.jooq.tables.pojos.AppUser> fetchOptionalById(Integer value) {
        return fetchOptional(AppUser.APP_USER.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.dal.generated.jooq.tables.pojos.AppUser> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppUser.APP_USER.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.dal.generated.jooq.tables.pojos.AppUser> fetchByName(String... values) {
        return fetch(AppUser.APP_USER.NAME, values);
    }
}

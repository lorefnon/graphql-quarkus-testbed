/*
 * This file is generated by jOOQ.
 */
package com.example.dal.generated.jooq;


import com.example.dal.generated.jooq.tables.AppUser;
import com.example.dal.generated.jooq.tables.Databasechangeloglock;
import com.example.dal.generated.jooq.tables.Notebook;
import com.example.dal.generated.jooq.tables.records.AppUserRecord;
import com.example.dal.generated.jooq.tables.records.DatabasechangeloglockRecord;
import com.example.dal.generated.jooq.tables.records.NotebookRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AppUserRecord> APP_USER_PKEY = Internal.createUniqueKey(AppUser.APP_USER, DSL.name("app_user_pkey"), new TableField[] { AppUser.APP_USER.ID }, true);
    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<NotebookRecord> NOTEBOOK_PKEY = Internal.createUniqueKey(Notebook.NOTEBOOK, DSL.name("notebook_pkey"), new TableField[] { Notebook.NOTEBOOK.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<NotebookRecord, AppUserRecord> NOTEBOOK__FK_NOTEBOOK__CREATOR_ID = Internal.createForeignKey(Notebook.NOTEBOOK, DSL.name("fk_notebook__creator_id"), new TableField[] { Notebook.NOTEBOOK.CREATOR_ID }, Keys.APP_USER_PKEY, new TableField[] { AppUser.APP_USER.ID }, true);
}
